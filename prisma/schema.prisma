// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         String    @id @default(uuid())
  name       String
  password   String?
  email      String    @unique
  googleId   String?   @unique
  facebookId String?   @unique
  photo      String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  posts      Post[]
  comments   Comment[]
  likes      Like[]
}

model Post {
  id                 String             @id @default(uuid())
  title              String
  body               String
  images             String[]
  published          Boolean
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
  author             User               @relation(fields: [userId], references: [id])
  userId             String
  comments           Comment[]
  likes              Like[]
  likesNotifications LikeNotification[]
}

model Comment {
  id        String   @id @default(uuid())
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [userId], references: [id])
  userId    String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
}

model Like {
  active        Boolean
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  author        User               @relation(fields: [userId], references: [id])
  userId        String
  post          Post               @relation(fields: [postId], references: [id])
  postId        String
  notifications LikeNotification[]

  @@id([userId, postId])
}

model LikeNotification {
  id           String   @id @default(uuid())
  read         Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  like         Like     @relation(fields: [likeAuthorId, postAuthorId], references: [userId, postId])
  likeAuthorId String
  postAuthorId String
  post         Post     @relation(fields: [postId], references: [id])
  postId       String
}
